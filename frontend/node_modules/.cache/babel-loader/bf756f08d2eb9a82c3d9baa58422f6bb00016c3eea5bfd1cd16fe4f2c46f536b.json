{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zvarn\\\\Desktop\\\\Projects\\\\frontend\\\\src\\\\components\\\\DraggableModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Modal.css';\nimport ConfirmDialog from './ConfirmDialog';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DraggableModal({\n  children,\n  onClose,\n  position\n}) {\n  _s();\n  const [modalPosition, setModalPosition] = useState(() => {\n    // Calculate initial position to cascade multiple modals\n    const baseOffset = 50;\n    const openModals = document.querySelectorAll('.modal').length;\n    return {\n      x: (position === null || position === void 0 ? void 0 : position.x) || baseOffset + openModals * 20,\n      y: (position === null || position === void 0 ? void 0 : position.y) || baseOffset + openModals * 20\n    };\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const modalRef = useRef(null);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [hasChanges, setHasChanges] = useState(false);\n  useEffect(() => {\n    var _modalRef$current;\n    // Bring modal to front when clicked\n    const handleClick = () => {\n      const modals = document.querySelectorAll('.modal');\n      const maxZIndex = Array.from(modals).reduce((max, modal) => Math.max(max, parseInt(modal.style.zIndex || 1000)), 1000);\n      if (modalRef.current) {\n        modalRef.current.style.zIndex = maxZIndex + 1;\n      }\n    };\n    (_modalRef$current = modalRef.current) === null || _modalRef$current === void 0 ? void 0 : _modalRef$current.addEventListener('mousedown', handleClick);\n    return () => {\n      var _modalRef$current2;\n      return (_modalRef$current2 = modalRef.current) === null || _modalRef$current2 === void 0 ? void 0 : _modalRef$current2.removeEventListener('mousedown', handleClick);\n    };\n  }, []);\n  const handleMouseDown = e => {\n    if (e.target.closest('.modal-content')) return;\n    setIsDragging(true);\n    setDragStart({\n      x: e.clientX - modalPosition.x,\n      y: e.clientY - modalPosition.y\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n    const newX = e.clientX - dragStart.x;\n    const newY = e.clientY - dragStart.y;\n\n    // Keep modal within viewport bounds\n    const modalRect = modalRef.current.getBoundingClientRect();\n    const maxX = window.innerWidth - modalRect.width;\n    const maxY = window.innerHeight - modalRect.height;\n    setModalPosition({\n      x: Math.min(Math.max(0, newX), maxX),\n      y: Math.min(Math.max(0, newY), maxY)\n    });\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  const handleDetach = () => {\n    const modalFeatures = 'width=600,height=600,left=200,top=200';\n    const newWindow = window.open('', '_blank', modalFeatures);\n    newWindow.document.write(`\n      <html>\n        <head>\n          <title>Content Details</title>\n          <link rel=\"stylesheet\" href=\"${window.location.origin}/modal.css\">\n          ${document.head.innerHTML}\n        </head>\n        <body>\n          <div id=\"modal-root\"></div>\n        </body>\n      </html>\n    `);\n    const modalContent = modalRef.current.querySelector('.modal-content').cloneNode(true);\n    newWindow.document.getElementById('modal-root').appendChild(modalContent);\n    onClose();\n  };\n  const handleClose = () => {\n    if (hasChanges) {\n      setShowConfirm(true);\n    } else {\n      onClose();\n    }\n  };\n  const handleConfirmClose = () => {\n    setShowConfirm(false);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: modalRef,\n      className: \"modal\",\n      style: {\n        left: modalPosition.x,\n        top: modalPosition.y,\n        cursor: isDragging ? 'grabbing' : 'grab'\n      },\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-control-button\",\n            onClick: handleDetach,\n            title: \"Open in new window\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-external-link-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-control-button\",\n            onClick: handleClose,\n            title: \"Close\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/React.cloneElement(children, {\n          onFormChange: () => setHasChanges(true)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      message: \"You have unsaved changes. Are you sure you want to close?\",\n      onConfirm: handleConfirmClose,\n      onCancel: () => setShowConfirm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(DraggableModal, \"qDZEWCheT8fOjSAB/lzq7GjYr98=\");\n_c = DraggableModal;\nexport default DraggableModal;\nvar _c;\n$RefreshReg$(_c, \"DraggableModal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ConfirmDialog","jsxDEV","_jsxDEV","Fragment","_Fragment","DraggableModal","children","onClose","position","_s","modalPosition","setModalPosition","baseOffset","openModals","document","querySelectorAll","length","x","y","isDragging","setIsDragging","dragStart","setDragStart","modalRef","showConfirm","setShowConfirm","hasChanges","setHasChanges","_modalRef$current","handleClick","modals","maxZIndex","Array","from","reduce","max","modal","Math","parseInt","style","zIndex","current","addEventListener","_modalRef$current2","removeEventListener","handleMouseDown","e","target","closest","clientX","clientY","handleMouseMove","newX","newY","modalRect","getBoundingClientRect","maxX","window","innerWidth","width","maxY","innerHeight","height","min","handleMouseUp","handleDetach","modalFeatures","newWindow","open","write","location","origin","head","innerHTML","modalContent","querySelector","cloneNode","getElementById","appendChild","handleClose","handleConfirmClose","ref","className","left","top","cursor","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","cloneElement","onFormChange","message","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/zvarn/Desktop/Projects/frontend/src/components/DraggableModal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './Modal.css';\r\nimport ConfirmDialog from './ConfirmDialog';\r\n\r\nfunction DraggableModal({ children, onClose, position }) {\r\n  const [modalPosition, setModalPosition] = useState(() => {\r\n    // Calculate initial position to cascade multiple modals\r\n    const baseOffset = 50;\r\n    const openModals = document.querySelectorAll('.modal').length;\r\n    return {\r\n      x: position?.x || baseOffset + (openModals * 20),\r\n      y: position?.y || baseOffset + (openModals * 20)\r\n    };\r\n  });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n  const modalRef = useRef(null);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [hasChanges, setHasChanges] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Bring modal to front when clicked\r\n    const handleClick = () => {\r\n      const modals = document.querySelectorAll('.modal');\r\n      const maxZIndex = Array.from(modals).reduce(\r\n        (max, modal) => Math.max(max, parseInt(modal.style.zIndex || 1000)),\r\n        1000\r\n      );\r\n      if (modalRef.current) {\r\n        modalRef.current.style.zIndex = maxZIndex + 1;\r\n      }\r\n    };\r\n\r\n    modalRef.current?.addEventListener('mousedown', handleClick);\r\n    return () => modalRef.current?.removeEventListener('mousedown', handleClick);\r\n  }, []);\r\n\r\n  const handleMouseDown = (e) => {\r\n    if (e.target.closest('.modal-content')) return;\r\n    setIsDragging(true);\r\n    setDragStart({\r\n      x: e.clientX - modalPosition.x,\r\n      y: e.clientY - modalPosition.y\r\n    });\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDragging) return;\r\n    \r\n    const newX = e.clientX - dragStart.x;\r\n    const newY = e.clientY - dragStart.y;\r\n    \r\n    // Keep modal within viewport bounds\r\n    const modalRect = modalRef.current.getBoundingClientRect();\r\n    const maxX = window.innerWidth - modalRect.width;\r\n    const maxY = window.innerHeight - modalRect.height;\r\n    \r\n    setModalPosition({\r\n      x: Math.min(Math.max(0, newX), maxX),\r\n      y: Math.min(Math.max(0, newY), maxY)\r\n    });\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleDetach = () => {\r\n    const modalFeatures = 'width=600,height=600,left=200,top=200';\r\n    const newWindow = window.open('', '_blank', modalFeatures);\r\n    \r\n    newWindow.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Content Details</title>\r\n          <link rel=\"stylesheet\" href=\"${window.location.origin}/modal.css\">\r\n          ${document.head.innerHTML}\r\n        </head>\r\n        <body>\r\n          <div id=\"modal-root\"></div>\r\n        </body>\r\n      </html>\r\n    `);\r\n\r\n    const modalContent = modalRef.current.querySelector('.modal-content').cloneNode(true);\r\n    newWindow.document.getElementById('modal-root').appendChild(modalContent);\r\n    onClose();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (hasChanges) {\r\n      setShowConfirm(true);\r\n    } else {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleConfirmClose = () => {\r\n    setShowConfirm(false);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={modalRef}\r\n        className=\"modal\"\r\n        style={{\r\n          left: modalPosition.x,\r\n          top: modalPosition.y,\r\n          cursor: isDragging ? 'grabbing' : 'grab'\r\n        }}\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onMouseLeave={handleMouseUp}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <div className=\"modal-controls\">\r\n            <button \r\n              className=\"modal-control-button\"\r\n              onClick={handleDetach}\r\n              title=\"Open in new window\"\r\n            >\r\n              <i className=\"fas fa-external-link-alt\"></i>\r\n            </button>\r\n            <button \r\n              className=\"modal-control-button\"\r\n              onClick={handleClose}\r\n              title=\"Close\"\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-content\">\r\n          {React.cloneElement(children, {\r\n            onFormChange: () => setHasChanges(true)\r\n          })}\r\n        </div>\r\n      </div>\r\n      {showConfirm && (\r\n        <ConfirmDialog\r\n          message=\"You have unsaved changes. Are you sure you want to close?\"\r\n          onConfirm={handleConfirmClose}\r\n          onCancel={() => setShowConfirm(false)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DraggableModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}