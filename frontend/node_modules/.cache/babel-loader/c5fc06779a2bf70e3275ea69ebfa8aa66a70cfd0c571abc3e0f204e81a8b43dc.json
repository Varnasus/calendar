{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zvarn\\\\Desktop\\\\Projects\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from './components/Calendar';\nimport AddItemModal from './components/AddItemModal';\nimport CampaignModal from './components/CampaignModal';\nimport SocialPostModal from './components/SocialPostModal';\nimport DraggableModal from './components/DraggableModal';\nimport Toast from './components/Toast';\nimport Navigation from './components/Navigation';\nimport { loadPreferences, updatePreference } from './services/preferences';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [contentItems, setContentItems] = useState([]);\n  const [campaigns, setCampaigns] = useState([]);\n  const [socialPosts, setSocialPosts] = useState([]);\n  const [editingContentItem, setEditingContentItem] = useState(null);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [itemType, setItemType] = useState(null);\n  const [showSettingsDropdown, setShowSettingsDropdown] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [selectedContentItem, setSelectedContentItem] = useState(null);\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\n  const [selectedSocialPost, setSelectedSocialPost] = useState(null);\n  const [deletingItems, setDeletingItems] = useState(new Set());\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [toasts, setToasts] = useState([]);\n  const [preferences, setPreferences] = useState(loadPreferences());\n  const itemTypes = [{\n    id: 'content',\n    label: 'Content Item',\n    color: '#1a75ff'\n  }, {\n    id: 'campaign',\n    label: 'Campaign',\n    color: '#FFB3BA'\n  }, {\n    id: 'social',\n    label: 'Social Post',\n    color: '#1DA1F2'\n  }];\n  useEffect(() => {\n    fetchContentItems();\n    fetchCampaigns();\n    fetchSocialPosts();\n  }, []);\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n  useEffect(() => {\n    const handleClickOutside = e => {\n      // Close Add New dropdown\n      if (!e.target.closest('.add-button-container')) {\n        setShowDropdown(false);\n      }\n\n      // Close Settings dropdown\n      if (!e.target.closest('.settings-container')) {\n        setShowSettingsDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  useEffect(() => {\n    const savedPrefs = loadPreferences();\n    setIsDarkMode(savedPrefs.theme === 'dark');\n  }, []);\n  const fetchContentItems = async () => {\n    try {\n      const response = await fetch('/api/content-items');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setContentItems(data);\n    } catch (error) {\n      console.error('Error fetching content items:', error);\n    }\n  };\n  const fetchCampaigns = async () => {\n    try {\n      const response = await fetch('/api/campaigns');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCampaigns(data);\n    } catch (error) {\n      console.error('Error fetching campaigns:', error);\n      setCampaigns([]);\n    }\n  };\n  const fetchSocialPosts = async () => {\n    try {\n      const response = await fetch('/api/social-posts');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setSocialPosts(data);\n    } catch (error) {\n      console.error('Error fetching social posts:', error);\n      setSocialPosts([]);\n    }\n  };\n  const handleAddContentItem = async newContentItem => {\n    try {\n      const response = await fetch('/api/content-items', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newContentItem)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const savedContentItem = await response.json();\n      setContentItems([...contentItems, savedContentItem]);\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error adding content item:', error);\n      throw error;\n    }\n  };\n  const handleUpdateContentItem = async updatedContentItem => {\n    try {\n      const response = await fetch(`/api/content-items/${updatedContentItem.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedContentItem)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const savedContentItem = await response.json();\n      setContentItems(contentItems.map(item => item.id === savedContentItem.id ? savedContentItem : item));\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error updating content item:', error);\n      throw error;\n    }\n  };\n  const addToast = (message, type = 'success') => {\n    const id = Date.now();\n    setToasts(prev => [...prev, {\n      id,\n      message,\n      type\n    }]);\n    setTimeout(() => {\n      removeToast(id);\n    }, 5000);\n  };\n  const removeToast = id => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n  const handleSaveContentItem = async contentItem => {\n    try {\n      if (contentItem.id) {\n        await handleUpdateContentItem(contentItem);\n        addToast(`Successfully updated \"${contentItem.title}\"`, 'success');\n      } else {\n        await handleAddContentItem(contentItem);\n        addToast(`Successfully created \"${contentItem.title}\"`, 'success');\n      }\n      setSelectedContentItem(null);\n    } catch (error) {\n      addToast(`Failed to ${contentItem.id ? 'update' : 'create'} content item: ${error.message}`, 'error');\n      throw error;\n    }\n  };\n  const handleEditItem = (type, item) => {\n    switch (type) {\n      case 'content':\n        setSelectedContentItem(item);\n        break;\n      case 'campaign':\n        setSelectedCampaign(item);\n        break;\n      case 'social':\n        setSelectedSocialPost(item);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleContentItemClose = () => {\n    setSelectedContentItem(null);\n    setItemType(null);\n  };\n  const handleCampaignClose = () => {\n    setSelectedCampaign(null);\n    setItemType(null);\n  };\n  const handleSocialPostClose = () => {\n    setSelectedSocialPost(null);\n    setItemType(null);\n  };\n  const showError = message => {\n    setErrorMessage(message);\n    setTimeout(() => setErrorMessage(null), 5000);\n  };\n  const handleDeleteContentItem = async id => {\n    try {\n      setDeletingItems(prev => new Set(prev).add(id));\n      const itemToDelete = contentItems.find(item => item.id === id);\n      setContentItems(prevItems => prevItems.filter(item => item.id !== id));\n      setSelectedContentItem(null);\n      const response = await fetch(`/api/content-items/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to delete content item`);\n      }\n      addToast(`Successfully deleted \"${itemToDelete.title}\"`, 'success');\n    } catch (error) {\n      addToast(`Failed to delete content item: ${error.message}`, 'error');\n      setContentItems(prevItems => {\n        const item = prevItems.find(i => i.id === id);\n        return item ? prevItems : [...prevItems, selectedContentItem];\n      });\n    } finally {\n      setDeletingItems(prev => {\n        const next = new Set(prev);\n        next.delete(id);\n        return next;\n      });\n    }\n  };\n  const handleAddClick = () => {\n    setShowDropdown(!showDropdown);\n  };\n  const handleItemTypeSelect = type => {\n    setItemType(type.id);\n    setShowDropdown(false);\n\n    // Create empty item based on type\n    const today = new Date().toISOString().split('T')[0];\n    switch (type.id) {\n      case 'content':\n        setSelectedContentItem({\n          title: '',\n          description: '',\n          status: 'Backlog',\n          date: today,\n          campaignId: ''\n        });\n        break;\n      case 'campaign':\n        setSelectedCampaign({\n          title: '',\n          description: '',\n          startDate: today,\n          endDate: today,\n          color: '#FFB3BA'\n        });\n        break;\n      case 'social':\n        setSelectedSocialPost({\n          title: '',\n          message: '',\n          platforms: [],\n          date: today\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSaveCampaign = async campaign => {\n    try {\n      const method = campaign.id ? 'PUT' : 'POST';\n      const url = campaign.id ? `/api/campaigns/${campaign.id}` : '/api/campaigns';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(campaign)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const savedCampaign = await response.json();\n      if (campaign.id) {\n        setCampaigns(campaigns.map(c => c.id === savedCampaign.id ? savedCampaign : c));\n      } else {\n        setCampaigns([...campaigns, savedCampaign]);\n      }\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error saving campaign:', error);\n      throw error;\n    }\n  };\n  const handleDeleteCampaign = async id => {\n    try {\n      // Optimistic update\n      setDeletingItems(prev => new Set(prev).add(id));\n      setCampaigns(prevCampaigns => prevCampaigns.filter(campaign => campaign.id !== id));\n      setSelectedCampaign(null);\n      const response = await fetch(`/api/campaigns/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to delete campaign`);\n      }\n    } catch (error) {\n      console.error('Error deleting campaign:', error);\n      // Revert optimistic update\n      setCampaigns(prevCampaigns => {\n        const campaign = prevCampaigns.find(c => c.id === id);\n        return campaign ? prevCampaigns : [...prevCampaigns, selectedCampaign];\n      });\n      showError('Failed to delete campaign. Please try again.');\n    } finally {\n      setDeletingItems(prev => {\n        const next = new Set(prev);\n        next.delete(id);\n        return next;\n      });\n    }\n  };\n  const handleSaveSocialPost = async post => {\n    try {\n      const method = post.id ? 'PUT' : 'POST';\n      const url = post.id ? `/api/social-posts/${post.id}` : '/api/social-posts';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(post)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const savedPost = await response.json();\n      if (post.id) {\n        setSocialPosts(socialPosts.map(p => p.id === savedPost.id ? savedPost : p));\n      } else {\n        setSocialPosts([...socialPosts, savedPost]);\n      }\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error saving social post:', error);\n      throw error;\n    }\n  };\n  const handleDeleteSocialPost = async id => {\n    try {\n      // Optimistic update\n      setDeletingItems(prev => new Set(prev).add(id));\n      setSocialPosts(prevPosts => prevPosts.filter(post => post.id !== id));\n      setSelectedSocialPost(null);\n      const response = await fetch(`/api/social-posts/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to delete social post`);\n      }\n    } catch (error) {\n      console.error('Error deleting social post:', error);\n      // Revert optimistic update\n      setSocialPosts(prevPosts => {\n        const post = prevPosts.find(p => p.id === id);\n        return post ? prevPosts : [...prevPosts, selectedSocialPost];\n      });\n      showError('Failed to delete social post. Please try again.');\n    } finally {\n      setDeletingItems(prev => {\n        const next = new Set(prev);\n        next.delete(id);\n        return next;\n      });\n    }\n  };\n  const handleThemeToggle = () => {\n    const newTheme = !isDarkMode ? 'dark' : 'light';\n    setIsDarkMode(!isDarkMode);\n    setPreferences(prev => {\n      const newPrefs = {\n        ...prev,\n        theme: newTheme\n      };\n      updatePreference('theme', newTheme);\n      return newPrefs;\n    });\n  };\n  const handleMoveItem = async (type, itemId, newDate) => {\n    try {\n      let endpoint;\n      let updateFunction;\n      let items;\n      switch (type) {\n        case 'content':\n          endpoint = '/api/content-items';\n          updateFunction = setContentItems;\n          items = contentItems;\n          break;\n        case 'social':\n          endpoint = '/api/social-posts';\n          updateFunction = setSocialPosts;\n          items = socialPosts;\n          break;\n        default:\n          return;\n      }\n      const item = items.find(i => i.id === itemId);\n      if (!item) return;\n      const updatedItem = {\n        ...item,\n        date: newDate\n      };\n      const response = await fetch(`${endpoint}/${itemId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedItem)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const savedItem = await response.json();\n      updateFunction(items.map(i => i.id === savedItem.id ? savedItem : i));\n    } catch (error) {\n      console.error('Error moving item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      preferences: preferences,\n      onPreferenceChange: (key, value) => {\n        setPreferences(prev => {\n          const newPrefs = {\n            ...prev,\n            [key]: value\n          };\n          updatePreference(key, value);\n          return newPrefs;\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Content Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSettingsDropdown(!showSettingsDropdown),\n              className: \"settings-button\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-ellipsis-v\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this), showSettingsDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings-dropdown\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"settings-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Color Scheme\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"switch\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: isDarkMode,\n                    onChange: handleThemeToggle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"slider\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"slider-text\",\n                      children: isDarkMode ? 'Dark' : 'Light'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddClick,\n              className: \"add-button\",\n              children: [\"Add New \", showDropdown ? '▼' : '▶']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-dropdown\",\n              children: itemTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dropdown-item\",\n                onClick: () => handleItemTypeSelect(type),\n                children: type.label\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        contentItems: contentItems,\n        campaigns: campaigns,\n        socialPosts: socialPosts,\n        onEditItem: handleEditItem,\n        onMoveItem: handleMoveItem,\n        preferences: preferences,\n        onPreferenceChange: (key, value) => {\n          setPreferences(prev => {\n            const newPrefs = {\n              ...prev,\n              [key]: value\n            };\n            updatePreference(key, value);\n            return newPrefs;\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-toast\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this), errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this), selectedContentItem && /*#__PURE__*/_jsxDEV(DraggableModal, {\n        onClose: handleContentItemClose,\n        children: /*#__PURE__*/_jsxDEV(AddItemModal, {\n          contentItem: selectedContentItem,\n          campaigns: campaigns,\n          onSave: handleSaveContentItem,\n          onCancel: handleContentItemClose,\n          onDelete: handleDeleteContentItem,\n          isDeleting: deletingItems.has(selectedContentItem.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 11\n      }, this), selectedCampaign && /*#__PURE__*/_jsxDEV(DraggableModal, {\n        onClose: handleCampaignClose,\n        children: /*#__PURE__*/_jsxDEV(CampaignModal, {\n          campaign: selectedCampaign,\n          onSave: handleSaveCampaign,\n          onCancel: handleCampaignClose,\n          onDelete: handleDeleteCampaign,\n          isDeleting: deletingItems.has(selectedCampaign.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this), selectedSocialPost && /*#__PURE__*/_jsxDEV(DraggableModal, {\n        onClose: handleSocialPostClose,\n        children: /*#__PURE__*/_jsxDEV(SocialPostModal, {\n          post: selectedSocialPost,\n          onSave: handleSaveSocialPost,\n          onCancel: handleSocialPostClose,\n          onDelete: handleDeleteSocialPost,\n          isDeleting: deletingItems.has(selectedSocialPost.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-container\",\n        children: toasts.map(toast => /*#__PURE__*/_jsxDEV(Toast, {\n          message: toast.message,\n          type: toast.type,\n          onClose: () => removeToast(toast.id)\n        }, toast.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 493,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mRgeArHQ77yHtywHdA0EN3Q+x/o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","AddItemModal","CampaignModal","SocialPostModal","DraggableModal","Toast","Navigation","loadPreferences","updatePreference","jsxDEV","_jsxDEV","App","_s","showModal","setShowModal","contentItems","setContentItems","campaigns","setCampaigns","socialPosts","setSocialPosts","editingContentItem","setEditingContentItem","showDropdown","setShowDropdown","itemType","setItemType","showSettingsDropdown","setShowSettingsDropdown","isDarkMode","setIsDarkMode","selectedContentItem","setSelectedContentItem","selectedCampaign","setSelectedCampaign","selectedSocialPost","setSelectedSocialPost","deletingItems","setDeletingItems","Set","errorMessage","setErrorMessage","toasts","setToasts","preferences","setPreferences","itemTypes","id","label","color","fetchContentItems","fetchCampaigns","fetchSocialPosts","document","documentElement","setAttribute","handleClickOutside","e","target","closest","addEventListener","removeEventListener","savedPrefs","theme","response","fetch","ok","Error","status","data","json","error","console","handleAddContentItem","newContentItem","method","headers","body","JSON","stringify","savedContentItem","handleUpdateContentItem","updatedContentItem","map","item","addToast","message","type","Date","now","prev","setTimeout","removeToast","filter","toast","handleSaveContentItem","contentItem","title","handleEditItem","handleContentItemClose","handleCampaignClose","handleSocialPostClose","showError","handleDeleteContentItem","add","itemToDelete","find","prevItems","i","next","delete","handleAddClick","handleItemTypeSelect","today","toISOString","split","description","date","campaignId","startDate","endDate","platforms","handleSaveCampaign","campaign","url","savedCampaign","c","handleDeleteCampaign","prevCampaigns","handleSaveSocialPost","post","savedPost","p","handleDeleteSocialPost","prevPosts","handleThemeToggle","newTheme","newPrefs","handleMoveItem","itemId","newDate","endpoint","updateFunction","items","updatedItem","savedItem","className","children","onPreferenceChange","key","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","onChange","onEditItem","onMoveItem","onClose","onSave","onCancel","onDelete","isDeleting","has","_c","$RefreshReg$"],"sources":["C:/Users/zvarn/Desktop/Projects/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from './components/Calendar';\r\nimport AddItemModal from './components/AddItemModal';\r\nimport CampaignModal from './components/CampaignModal';\r\nimport SocialPostModal from './components/SocialPostModal';\r\nimport DraggableModal from './components/DraggableModal';\r\nimport Toast from './components/Toast';\r\nimport Navigation from './components/Navigation';\r\nimport { loadPreferences, updatePreference } from './services/preferences';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [contentItems, setContentItems] = useState([]);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [socialPosts, setSocialPosts] = useState([]);\r\n  const [editingContentItem, setEditingContentItem] = useState(null);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [itemType, setItemType] = useState(null);\r\n  const [showSettingsDropdown, setShowSettingsDropdown] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [selectedContentItem, setSelectedContentItem] = useState(null);\r\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\r\n  const [selectedSocialPost, setSelectedSocialPost] = useState(null);\r\n  const [deletingItems, setDeletingItems] = useState(new Set());\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [toasts, setToasts] = useState([]);\r\n  const [preferences, setPreferences] = useState(loadPreferences());\r\n\r\n  const itemTypes = [\r\n    { \r\n      id: 'content', \r\n      label: 'Content Item',\r\n      color: '#1a75ff'\r\n    },\r\n    { \r\n      id: 'campaign', \r\n      label: 'Campaign',\r\n      color: '#FFB3BA'\r\n    },\r\n    { \r\n      id: 'social', \r\n      label: 'Social Post',\r\n      color: '#1DA1F2'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchContentItems();\r\n    fetchCampaigns();\r\n    fetchSocialPosts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\r\n  }, [isDarkMode]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      // Close Add New dropdown\r\n      if (!e.target.closest('.add-button-container')) {\r\n        setShowDropdown(false);\r\n      }\r\n      \r\n      // Close Settings dropdown\r\n      if (!e.target.closest('.settings-container')) {\r\n        setShowSettingsDropdown(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedPrefs = loadPreferences();\r\n    setIsDarkMode(savedPrefs.theme === 'dark');\r\n  }, []);\r\n\r\n  const fetchContentItems = async () => {\r\n    try {\r\n      const response = await fetch('/api/content-items');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setContentItems(data);\r\n    } catch (error) {\r\n      console.error('Error fetching content items:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCampaigns = async () => {\r\n    try {\r\n      const response = await fetch('/api/campaigns');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setCampaigns(data);\r\n    } catch (error) {\r\n      console.error('Error fetching campaigns:', error);\r\n      setCampaigns([]);\r\n    }\r\n  };\r\n\r\n  const fetchSocialPosts = async () => {\r\n    try {\r\n      const response = await fetch('/api/social-posts');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setSocialPosts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching social posts:', error);\r\n      setSocialPosts([]);\r\n    }\r\n  };\r\n\r\n  const handleAddContentItem = async (newContentItem) => {\r\n    try {\r\n      const response = await fetch('/api/content-items', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newContentItem),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const savedContentItem = await response.json();\r\n      setContentItems([...contentItems, savedContentItem]);\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error('Error adding content item:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleUpdateContentItem = async (updatedContentItem) => {\r\n    try {\r\n      const response = await fetch(`/api/content-items/${updatedContentItem.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedContentItem),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const savedContentItem = await response.json();\r\n      setContentItems(contentItems.map(item => \r\n        item.id === savedContentItem.id ? savedContentItem : item\r\n      ));\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error('Error updating content item:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const addToast = (message, type = 'success') => {\r\n    const id = Date.now();\r\n    setToasts(prev => [...prev, { id, message, type }]);\r\n    setTimeout(() => {\r\n      removeToast(id);\r\n    }, 5000);\r\n  };\r\n\r\n  const removeToast = (id) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  };\r\n\r\n  const handleSaveContentItem = async (contentItem) => {\r\n    try {\r\n      if (contentItem.id) {\r\n        await handleUpdateContentItem(contentItem);\r\n        addToast(`Successfully updated \"${contentItem.title}\"`, 'success');\r\n      } else {\r\n        await handleAddContentItem(contentItem);\r\n        addToast(`Successfully created \"${contentItem.title}\"`, 'success');\r\n      }\r\n      setSelectedContentItem(null);\r\n    } catch (error) {\r\n      addToast(\r\n        `Failed to ${contentItem.id ? 'update' : 'create'} content item: ${error.message}`,\r\n        'error'\r\n      );\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleEditItem = (type, item) => {\r\n    switch (type) {\r\n      case 'content':\r\n        setSelectedContentItem(item);\r\n        break;\r\n      case 'campaign':\r\n        setSelectedCampaign(item);\r\n        break;\r\n      case 'social':\r\n        setSelectedSocialPost(item);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleContentItemClose = () => {\r\n    setSelectedContentItem(null);\r\n    setItemType(null);\r\n  };\r\n\r\n  const handleCampaignClose = () => {\r\n    setSelectedCampaign(null);\r\n    setItemType(null);\r\n  };\r\n\r\n  const handleSocialPostClose = () => {\r\n    setSelectedSocialPost(null);\r\n    setItemType(null);\r\n  };\r\n\r\n  const showError = (message) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => setErrorMessage(null), 5000);\r\n  };\r\n\r\n  const handleDeleteContentItem = async (id) => {\r\n    try {\r\n      setDeletingItems(prev => new Set(prev).add(id));\r\n      const itemToDelete = contentItems.find(item => item.id === id);\r\n      setContentItems(prevItems => prevItems.filter(item => item.id !== id));\r\n      setSelectedContentItem(null);\r\n\r\n      const response = await fetch(`/api/content-items/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to delete content item`);\r\n      }\r\n      addToast(`Successfully deleted \"${itemToDelete.title}\"`, 'success');\r\n    } catch (error) {\r\n      addToast(`Failed to delete content item: ${error.message}`, 'error');\r\n      setContentItems(prevItems => {\r\n        const item = prevItems.find(i => i.id === id);\r\n        return item ? prevItems : [...prevItems, selectedContentItem];\r\n      });\r\n    } finally {\r\n      setDeletingItems(prev => {\r\n        const next = new Set(prev);\r\n        next.delete(id);\r\n        return next;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setShowDropdown(!showDropdown);\r\n  };\r\n\r\n  const handleItemTypeSelect = (type) => {\r\n    setItemType(type.id);\r\n    setShowDropdown(false);\r\n    \r\n    // Create empty item based on type\r\n    const today = new Date().toISOString().split('T')[0];\r\n    \r\n    switch (type.id) {\r\n      case 'content':\r\n        setSelectedContentItem({\r\n          title: '',\r\n          description: '',\r\n          status: 'Backlog',\r\n          date: today,\r\n          campaignId: ''\r\n        });\r\n        break;\r\n      case 'campaign':\r\n        setSelectedCampaign({\r\n          title: '',\r\n          description: '',\r\n          startDate: today,\r\n          endDate: today,\r\n          color: '#FFB3BA'\r\n        });\r\n        break;\r\n      case 'social':\r\n        setSelectedSocialPost({\r\n          title: '',\r\n          message: '',\r\n          platforms: [],\r\n          date: today\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSaveCampaign = async (campaign) => {\r\n    try {\r\n      const method = campaign.id ? 'PUT' : 'POST';\r\n      const url = campaign.id ? `/api/campaigns/${campaign.id}` : '/api/campaigns';\r\n      \r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(campaign),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const savedCampaign = await response.json();\r\n      \r\n      if (campaign.id) {\r\n        setCampaigns(campaigns.map(c => \r\n          c.id === savedCampaign.id ? savedCampaign : c\r\n        ));\r\n      } else {\r\n        setCampaigns([...campaigns, savedCampaign]);\r\n      }\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error('Error saving campaign:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleDeleteCampaign = async (id) => {\r\n    try {\r\n      // Optimistic update\r\n      setDeletingItems(prev => new Set(prev).add(id));\r\n      setCampaigns(prevCampaigns => prevCampaigns.filter(campaign => campaign.id !== id));\r\n      setSelectedCampaign(null);\r\n\r\n      const response = await fetch(`/api/campaigns/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to delete campaign`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting campaign:', error);\r\n      // Revert optimistic update\r\n      setCampaigns(prevCampaigns => {\r\n        const campaign = prevCampaigns.find(c => c.id === id);\r\n        return campaign ? prevCampaigns : [...prevCampaigns, selectedCampaign];\r\n      });\r\n      showError('Failed to delete campaign. Please try again.');\r\n    } finally {\r\n      setDeletingItems(prev => {\r\n        const next = new Set(prev);\r\n        next.delete(id);\r\n        return next;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSaveSocialPost = async (post) => {\r\n    try {\r\n      const method = post.id ? 'PUT' : 'POST';\r\n      const url = post.id ? `/api/social-posts/${post.id}` : '/api/social-posts';\r\n      \r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(post),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const savedPost = await response.json();\r\n      \r\n      if (post.id) {\r\n        setSocialPosts(socialPosts.map(p => \r\n          p.id === savedPost.id ? savedPost : p\r\n        ));\r\n      } else {\r\n        setSocialPosts([...socialPosts, savedPost]);\r\n      }\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error('Error saving social post:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleDeleteSocialPost = async (id) => {\r\n    try {\r\n      // Optimistic update\r\n      setDeletingItems(prev => new Set(prev).add(id));\r\n      setSocialPosts(prevPosts => prevPosts.filter(post => post.id !== id));\r\n      setSelectedSocialPost(null);\r\n\r\n      const response = await fetch(`/api/social-posts/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to delete social post`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting social post:', error);\r\n      // Revert optimistic update\r\n      setSocialPosts(prevPosts => {\r\n        const post = prevPosts.find(p => p.id === id);\r\n        return post ? prevPosts : [...prevPosts, selectedSocialPost];\r\n      });\r\n      showError('Failed to delete social post. Please try again.');\r\n    } finally {\r\n      setDeletingItems(prev => {\r\n        const next = new Set(prev);\r\n        next.delete(id);\r\n        return next;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleThemeToggle = () => {\r\n    const newTheme = !isDarkMode ? 'dark' : 'light';\r\n    setIsDarkMode(!isDarkMode);\r\n    setPreferences(prev => {\r\n      const newPrefs = { ...prev, theme: newTheme };\r\n      updatePreference('theme', newTheme);\r\n      return newPrefs;\r\n    });\r\n  };\r\n\r\n  const handleMoveItem = async (type, itemId, newDate) => {\r\n    try {\r\n      let endpoint;\r\n      let updateFunction;\r\n      let items;\r\n\r\n      switch (type) {\r\n        case 'content':\r\n          endpoint = '/api/content-items';\r\n          updateFunction = setContentItems;\r\n          items = contentItems;\r\n          break;\r\n        case 'social':\r\n          endpoint = '/api/social-posts';\r\n          updateFunction = setSocialPosts;\r\n          items = socialPosts;\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n\r\n      const item = items.find(i => i.id === itemId);\r\n      if (!item) return;\r\n\r\n      const updatedItem = { ...item, date: newDate };\r\n\r\n      const response = await fetch(`${endpoint}/${itemId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedItem),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const savedItem = await response.json();\r\n      updateFunction(items.map(i => i.id === savedItem.id ? savedItem : i));\r\n    } catch (error) {\r\n      console.error('Error moving item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation \r\n        preferences={preferences}\r\n        onPreferenceChange={(key, value) => {\r\n          setPreferences(prev => {\r\n            const newPrefs = { ...prev, [key]: value };\r\n            updatePreference(key, value);\r\n            return newPrefs;\r\n          });\r\n        }}\r\n      />\r\n      <div className=\"main-content\">\r\n        <div className=\"header\">\r\n          <h1>Content Calendar</h1>\r\n          <div className=\"header-controls\">\r\n            <div className=\"settings-container\">\r\n              <button \r\n                onClick={() => setShowSettingsDropdown(!showSettingsDropdown)} \r\n                className=\"settings-button\"\r\n              >\r\n                <i className=\"fas fa-ellipsis-v\"></i>\r\n              </button>\r\n              {showSettingsDropdown && (\r\n                <div className=\"settings-dropdown\">\r\n                  <div className=\"settings-item\">\r\n                    <span>Color Scheme</span>\r\n                    <label className=\"switch\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={isDarkMode}\r\n                        onChange={handleThemeToggle}\r\n                      />\r\n                      <span className=\"slider\">\r\n                        <span className=\"slider-text\">\r\n                          {isDarkMode ? 'Dark' : 'Light'}\r\n                        </span>\r\n                      </span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"add-button-container\">\r\n              <button onClick={handleAddClick} className=\"add-button\">\r\n                Add New {showDropdown ? '▼' : '▶'}\r\n              </button>\r\n              {showDropdown && (\r\n                <div className=\"add-dropdown\">\r\n                  {itemTypes.map(type => (\r\n                    <button\r\n                      key={type.id}\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => handleItemTypeSelect(type)}\r\n                    >\r\n                      {type.label}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Calendar \r\n          contentItems={contentItems} \r\n          campaigns={campaigns}\r\n          socialPosts={socialPosts}\r\n          onEditItem={handleEditItem}\r\n          onMoveItem={handleMoveItem}\r\n          preferences={preferences}\r\n          onPreferenceChange={(key, value) => {\r\n            setPreferences(prev => {\r\n              const newPrefs = { ...prev, [key]: value };\r\n              updatePreference(key, value);\r\n              return newPrefs;\r\n            });\r\n          }}\r\n        />\r\n        {errorMessage && (\r\n          <div className=\"error-toast\">\r\n            <i className=\"fas fa-exclamation-circle\"></i>\r\n            {errorMessage}\r\n          </div>\r\n        )}\r\n        {selectedContentItem && (\r\n          <DraggableModal onClose={handleContentItemClose}>\r\n            <AddItemModal\r\n              contentItem={selectedContentItem}\r\n              campaigns={campaigns}\r\n              onSave={handleSaveContentItem}\r\n              onCancel={handleContentItemClose}\r\n              onDelete={handleDeleteContentItem}\r\n              isDeleting={deletingItems.has(selectedContentItem.id)}\r\n            />\r\n          </DraggableModal>\r\n        )}\r\n\r\n        {selectedCampaign && (\r\n          <DraggableModal onClose={handleCampaignClose}>\r\n            <CampaignModal\r\n              campaign={selectedCampaign}\r\n              onSave={handleSaveCampaign}\r\n              onCancel={handleCampaignClose}\r\n              onDelete={handleDeleteCampaign}\r\n              isDeleting={deletingItems.has(selectedCampaign.id)}\r\n            />\r\n          </DraggableModal>\r\n        )}\r\n\r\n        {selectedSocialPost && (\r\n          <DraggableModal onClose={handleSocialPostClose}>\r\n            <SocialPostModal\r\n              post={selectedSocialPost}\r\n              onSave={handleSaveSocialPost}\r\n              onCancel={handleSocialPostClose}\r\n              onDelete={handleDeleteSocialPost}\r\n              isDeleting={deletingItems.has(selectedSocialPost.id)}\r\n            />\r\n          </DraggableModal>\r\n        )}\r\n\r\n        <div className=\"toast-container\">\r\n          {toasts.map(toast => (\r\n            <Toast\r\n              key={toast.id}\r\n              message={toast.message}\r\n              type={toast.type}\r\n              onClose={() => removeToast(toast.id)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,wBAAwB;AAC1E,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC6B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAAC+B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACmC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACqC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACuC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxC,QAAQ,CAAC,IAAIyC,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC4C,MAAM,EAAEC,SAAS,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8C,WAAW,EAAEC,cAAc,CAAC,GAAG/C,QAAQ,CAACS,eAAe,CAAC,CAAC,CAAC;EAEjE,MAAMuC,SAAS,GAAG,CAChB;IACEC,EAAE,EAAE,SAAS;IACbC,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,EAAE,EAAE,UAAU;IACdC,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,EAAE,EAAE,QAAQ;IACZC,KAAK,EAAE,aAAa;IACpBC,KAAK,EAAE;EACT,CAAC,CACF;EAEDlD,SAAS,CAAC,MAAM;IACdmD,iBAAiB,CAAC,CAAC;IACnBC,cAAc,CAAC,CAAC;IAChBC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENrD,SAAS,CAAC,MAAM;IACdsD,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAE1B,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;EACpF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB9B,SAAS,CAAC,MAAM;IACd,MAAMyD,kBAAkB,GAAIC,CAAC,IAAK;MAChC;MACA,IAAI,CAACA,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,uBAAuB,CAAC,EAAE;QAC9CnC,eAAe,CAAC,KAAK,CAAC;MACxB;;MAEA;MACA,IAAI,CAACiC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,qBAAqB,CAAC,EAAE;QAC5C/B,uBAAuB,CAAC,KAAK,CAAC;MAChC;IACF,CAAC;IAEDyB,QAAQ,CAACO,gBAAgB,CAAC,WAAW,EAAEJ,kBAAkB,CAAC;IAC1D,OAAO,MAAMH,QAAQ,CAACQ,mBAAmB,CAAC,WAAW,EAAEL,kBAAkB,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;EAENzD,SAAS,CAAC,MAAM;IACd,MAAM+D,UAAU,GAAGvD,eAAe,CAAC,CAAC;IACpCuB,aAAa,CAACgC,UAAU,CAACC,KAAK,KAAK,MAAM,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMb,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,CAAC;MAClD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCtD,eAAe,CAACqD,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,MAAMpB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;MAC9C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCpD,YAAY,CAACmD,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDrD,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,MAAMkC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;MACjD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClClD,cAAc,CAACiD,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDnD,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAMqD,oBAAoB,GAAG,MAAOC,cAAc,IAAK;IACrD,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;QACjDU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,cAAc;MACrC,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMY,gBAAgB,GAAG,MAAMhB,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC9CtD,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEiE,gBAAgB,CAAC,CAAC;MACpDlE,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOyD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMU,uBAAuB,GAAG,MAAOC,kBAAkB,IAAK;IAC5D,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsBiB,kBAAkB,CAACnC,EAAE,EAAE,EAAE;QAC1E4B,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,kBAAkB;MACzC,CAAC,CAAC;MAEF,IAAI,CAAClB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMY,gBAAgB,GAAG,MAAMhB,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC9CtD,eAAe,CAACD,YAAY,CAACoE,GAAG,CAACC,IAAI,IACnCA,IAAI,CAACrC,EAAE,KAAKiC,gBAAgB,CAACjC,EAAE,GAAGiC,gBAAgB,GAAGI,IACvD,CAAC,CAAC;MACFtE,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOyD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMc,QAAQ,GAAGA,CAACC,OAAO,EAAEC,IAAI,GAAG,SAAS,KAAK;IAC9C,MAAMxC,EAAE,GAAGyC,IAAI,CAACC,GAAG,CAAC,CAAC;IACrB9C,SAAS,CAAC+C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAE3C,EAAE;MAAEuC,OAAO;MAAEC;IAAK,CAAC,CAAC,CAAC;IACnDI,UAAU,CAAC,MAAM;MACfC,WAAW,CAAC7C,EAAE,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAM6C,WAAW,GAAI7C,EAAE,IAAK;IAC1BJ,SAAS,CAAC+C,IAAI,IAAIA,IAAI,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,CAAC/C,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMgD,qBAAqB,GAAG,MAAOC,WAAW,IAAK;IACnD,IAAI;MACF,IAAIA,WAAW,CAACjD,EAAE,EAAE;QAClB,MAAMkC,uBAAuB,CAACe,WAAW,CAAC;QAC1CX,QAAQ,CAAC,yBAAyBW,WAAW,CAACC,KAAK,GAAG,EAAE,SAAS,CAAC;MACpE,CAAC,MAAM;QACL,MAAMxB,oBAAoB,CAACuB,WAAW,CAAC;QACvCX,QAAQ,CAAC,yBAAyBW,WAAW,CAACC,KAAK,GAAG,EAAE,SAAS,CAAC;MACpE;MACAjE,sBAAsB,CAAC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOuC,KAAK,EAAE;MACdc,QAAQ,CACN,aAAaW,WAAW,CAACjD,EAAE,GAAG,QAAQ,GAAG,QAAQ,kBAAkBwB,KAAK,CAACe,OAAO,EAAE,EAClF,OACF,CAAC;MACD,MAAMf,KAAK;IACb;EACF,CAAC;EAED,MAAM2B,cAAc,GAAGA,CAACX,IAAI,EAAEH,IAAI,KAAK;IACrC,QAAQG,IAAI;MACV,KAAK,SAAS;QACZvD,sBAAsB,CAACoD,IAAI,CAAC;QAC5B;MACF,KAAK,UAAU;QACblD,mBAAmB,CAACkD,IAAI,CAAC;QACzB;MACF,KAAK,QAAQ;QACXhD,qBAAqB,CAACgD,IAAI,CAAC;QAC3B;MACF;QACE;IACJ;EACF,CAAC;EAED,MAAMe,sBAAsB,GAAGA,CAAA,KAAM;IACnCnE,sBAAsB,CAAC,IAAI,CAAC;IAC5BN,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAM0E,mBAAmB,GAAGA,CAAA,KAAM;IAChClE,mBAAmB,CAAC,IAAI,CAAC;IACzBR,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAM2E,qBAAqB,GAAGA,CAAA,KAAM;IAClCjE,qBAAqB,CAAC,IAAI,CAAC;IAC3BV,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAM4E,SAAS,GAAIhB,OAAO,IAAK;IAC7B7C,eAAe,CAAC6C,OAAO,CAAC;IACxBK,UAAU,CAAC,MAAMlD,eAAe,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;EAC/C,CAAC;EAED,MAAM8D,uBAAuB,GAAG,MAAOxD,EAAE,IAAK;IAC5C,IAAI;MACFT,gBAAgB,CAACoD,IAAI,IAAI,IAAInD,GAAG,CAACmD,IAAI,CAAC,CAACc,GAAG,CAACzD,EAAE,CAAC,CAAC;MAC/C,MAAM0D,YAAY,GAAG1F,YAAY,CAAC2F,IAAI,CAACtB,IAAI,IAAIA,IAAI,CAACrC,EAAE,KAAKA,EAAE,CAAC;MAC9D/B,eAAe,CAAC2F,SAAS,IAAIA,SAAS,CAACd,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACrC,EAAE,KAAKA,EAAE,CAAC,CAAC;MACtEf,sBAAsB,CAAC,IAAI,CAAC;MAE5B,MAAMgC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsBlB,EAAE,EAAE,EAAE;QACvD4B,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAClD;MACAkB,QAAQ,CAAC,yBAAyBoB,YAAY,CAACR,KAAK,GAAG,EAAE,SAAS,CAAC;IACrE,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdc,QAAQ,CAAC,kCAAkCd,KAAK,CAACe,OAAO,EAAE,EAAE,OAAO,CAAC;MACpEtE,eAAe,CAAC2F,SAAS,IAAI;QAC3B,MAAMvB,IAAI,GAAGuB,SAAS,CAACD,IAAI,CAACE,CAAC,IAAIA,CAAC,CAAC7D,EAAE,KAAKA,EAAE,CAAC;QAC7C,OAAOqC,IAAI,GAAGuB,SAAS,GAAG,CAAC,GAAGA,SAAS,EAAE5E,mBAAmB,CAAC;MAC/D,CAAC,CAAC;IACJ,CAAC,SAAS;MACRO,gBAAgB,CAACoD,IAAI,IAAI;QACvB,MAAMmB,IAAI,GAAG,IAAItE,GAAG,CAACmD,IAAI,CAAC;QAC1BmB,IAAI,CAACC,MAAM,CAAC/D,EAAE,CAAC;QACf,OAAO8D,IAAI;MACb,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BvF,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMyF,oBAAoB,GAAIzB,IAAI,IAAK;IACrC7D,WAAW,CAAC6D,IAAI,CAACxC,EAAE,CAAC;IACpBvB,eAAe,CAAC,KAAK,CAAC;;IAEtB;IACA,MAAMyF,KAAK,GAAG,IAAIzB,IAAI,CAAC,CAAC,CAAC0B,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpD,QAAQ5B,IAAI,CAACxC,EAAE;MACb,KAAK,SAAS;QACZf,sBAAsB,CAAC;UACrBiE,KAAK,EAAE,EAAE;UACTmB,WAAW,EAAE,EAAE;UACfhD,MAAM,EAAE,SAAS;UACjBiD,IAAI,EAAEJ,KAAK;UACXK,UAAU,EAAE;QACd,CAAC,CAAC;QACF;MACF,KAAK,UAAU;QACbpF,mBAAmB,CAAC;UAClB+D,KAAK,EAAE,EAAE;UACTmB,WAAW,EAAE,EAAE;UACfG,SAAS,EAAEN,KAAK;UAChBO,OAAO,EAAEP,KAAK;UACdhE,KAAK,EAAE;QACT,CAAC,CAAC;QACF;MACF,KAAK,QAAQ;QACXb,qBAAqB,CAAC;UACpB6D,KAAK,EAAE,EAAE;UACTX,OAAO,EAAE,EAAE;UACXmC,SAAS,EAAE,EAAE;UACbJ,IAAI,EAAEJ;QACR,CAAC,CAAC;QACF;MACF;QACE;IACJ;EACF,CAAC;EAED,MAAMS,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC7C,IAAI;MACF,MAAMhD,MAAM,GAAGgD,QAAQ,CAAC5E,EAAE,GAAG,KAAK,GAAG,MAAM;MAC3C,MAAM6E,GAAG,GAAGD,QAAQ,CAAC5E,EAAE,GAAG,kBAAkB4E,QAAQ,CAAC5E,EAAE,EAAE,GAAG,gBAAgB;MAE5E,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC2D,GAAG,EAAE;QAChCjD,MAAM;QACNC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC4C,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAI,CAAC3D,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMyD,aAAa,GAAG,MAAM7D,QAAQ,CAACM,IAAI,CAAC,CAAC;MAE3C,IAAIqD,QAAQ,CAAC5E,EAAE,EAAE;QACf7B,YAAY,CAACD,SAAS,CAACkE,GAAG,CAAC2C,CAAC,IAC1BA,CAAC,CAAC/E,EAAE,KAAK8E,aAAa,CAAC9E,EAAE,GAAG8E,aAAa,GAAGC,CAC9C,CAAC,CAAC;MACJ,CAAC,MAAM;QACL5G,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE4G,aAAa,CAAC,CAAC;MAC7C;MACA/G,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOyD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMwD,oBAAoB,GAAG,MAAOhF,EAAE,IAAK;IACzC,IAAI;MACF;MACAT,gBAAgB,CAACoD,IAAI,IAAI,IAAInD,GAAG,CAACmD,IAAI,CAAC,CAACc,GAAG,CAACzD,EAAE,CAAC,CAAC;MAC/C7B,YAAY,CAAC8G,aAAa,IAAIA,aAAa,CAACnC,MAAM,CAAC8B,QAAQ,IAAIA,QAAQ,CAAC5E,EAAE,KAAKA,EAAE,CAAC,CAAC;MACnFb,mBAAmB,CAAC,IAAI,CAAC;MAEzB,MAAM8B,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkBlB,EAAE,EAAE,EAAE;QACnD4B,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;MACArD,YAAY,CAAC8G,aAAa,IAAI;QAC5B,MAAML,QAAQ,GAAGK,aAAa,CAACtB,IAAI,CAACoB,CAAC,IAAIA,CAAC,CAAC/E,EAAE,KAAKA,EAAE,CAAC;QACrD,OAAO4E,QAAQ,GAAGK,aAAa,GAAG,CAAC,GAAGA,aAAa,EAAE/F,gBAAgB,CAAC;MACxE,CAAC,CAAC;MACFqE,SAAS,CAAC,8CAA8C,CAAC;IAC3D,CAAC,SAAS;MACRhE,gBAAgB,CAACoD,IAAI,IAAI;QACvB,MAAMmB,IAAI,GAAG,IAAItE,GAAG,CAACmD,IAAI,CAAC;QAC1BmB,IAAI,CAACC,MAAM,CAAC/D,EAAE,CAAC;QACf,OAAO8D,IAAI;MACb,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMoB,oBAAoB,GAAG,MAAOC,IAAI,IAAK;IAC3C,IAAI;MACF,MAAMvD,MAAM,GAAGuD,IAAI,CAACnF,EAAE,GAAG,KAAK,GAAG,MAAM;MACvC,MAAM6E,GAAG,GAAGM,IAAI,CAACnF,EAAE,GAAG,qBAAqBmF,IAAI,CAACnF,EAAE,EAAE,GAAG,mBAAmB;MAE1E,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC2D,GAAG,EAAE;QAChCjD,MAAM;QACNC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACmD,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAAClE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAM+D,SAAS,GAAG,MAAMnE,QAAQ,CAACM,IAAI,CAAC,CAAC;MAEvC,IAAI4D,IAAI,CAACnF,EAAE,EAAE;QACX3B,cAAc,CAACD,WAAW,CAACgE,GAAG,CAACiD,CAAC,IAC9BA,CAAC,CAACrF,EAAE,KAAKoF,SAAS,CAACpF,EAAE,GAAGoF,SAAS,GAAGC,CACtC,CAAC,CAAC;MACJ,CAAC,MAAM;QACLhH,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEgH,SAAS,CAAC,CAAC;MAC7C;MACArH,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOyD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAM8D,sBAAsB,GAAG,MAAOtF,EAAE,IAAK;IAC3C,IAAI;MACF;MACAT,gBAAgB,CAACoD,IAAI,IAAI,IAAInD,GAAG,CAACmD,IAAI,CAAC,CAACc,GAAG,CAACzD,EAAE,CAAC,CAAC;MAC/C3B,cAAc,CAACkH,SAAS,IAAIA,SAAS,CAACzC,MAAM,CAACqC,IAAI,IAAIA,IAAI,CAACnF,EAAE,KAAKA,EAAE,CAAC,CAAC;MACrEX,qBAAqB,CAAC,IAAI,CAAC;MAE3B,MAAM4B,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqBlB,EAAE,EAAE,EAAE;QACtD4B,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;MACAnD,cAAc,CAACkH,SAAS,IAAI;QAC1B,MAAMJ,IAAI,GAAGI,SAAS,CAAC5B,IAAI,CAAC0B,CAAC,IAAIA,CAAC,CAACrF,EAAE,KAAKA,EAAE,CAAC;QAC7C,OAAOmF,IAAI,GAAGI,SAAS,GAAG,CAAC,GAAGA,SAAS,EAAEnG,kBAAkB,CAAC;MAC9D,CAAC,CAAC;MACFmE,SAAS,CAAC,iDAAiD,CAAC;IAC9D,CAAC,SAAS;MACRhE,gBAAgB,CAACoD,IAAI,IAAI;QACvB,MAAMmB,IAAI,GAAG,IAAItE,GAAG,CAACmD,IAAI,CAAC;QAC1BmB,IAAI,CAACC,MAAM,CAAC/D,EAAE,CAAC;QACf,OAAO8D,IAAI;MACb,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAM0B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,QAAQ,GAAG,CAAC3G,UAAU,GAAG,MAAM,GAAG,OAAO;IAC/CC,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BgB,cAAc,CAAC6C,IAAI,IAAI;MACrB,MAAM+C,QAAQ,GAAG;QAAE,GAAG/C,IAAI;QAAE3B,KAAK,EAAEyE;MAAS,CAAC;MAC7ChI,gBAAgB,CAAC,OAAO,EAAEgI,QAAQ,CAAC;MACnC,OAAOC,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAOnD,IAAI,EAAEoD,MAAM,EAAEC,OAAO,KAAK;IACtD,IAAI;MACF,IAAIC,QAAQ;MACZ,IAAIC,cAAc;MAClB,IAAIC,KAAK;MAET,QAAQxD,IAAI;QACV,KAAK,SAAS;UACZsD,QAAQ,GAAG,oBAAoB;UAC/BC,cAAc,GAAG9H,eAAe;UAChC+H,KAAK,GAAGhI,YAAY;UACpB;QACF,KAAK,QAAQ;UACX8H,QAAQ,GAAG,mBAAmB;UAC9BC,cAAc,GAAG1H,cAAc;UAC/B2H,KAAK,GAAG5H,WAAW;UACnB;QACF;UACE;MACJ;MAEA,MAAMiE,IAAI,GAAG2D,KAAK,CAACrC,IAAI,CAACE,CAAC,IAAIA,CAAC,CAAC7D,EAAE,KAAK4F,MAAM,CAAC;MAC7C,IAAI,CAACvD,IAAI,EAAE;MAEX,MAAM4D,WAAW,GAAG;QAAE,GAAG5D,IAAI;QAAEiC,IAAI,EAAEuB;MAAQ,CAAC;MAE9C,MAAM5E,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG4E,QAAQ,IAAIF,MAAM,EAAE,EAAE;QACpDhE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACiE,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAAChF,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAM6E,SAAS,GAAG,MAAMjF,QAAQ,CAACM,IAAI,CAAC,CAAC;MACvCwE,cAAc,CAACC,KAAK,CAAC5D,GAAG,CAACyB,CAAC,IAAIA,CAAC,CAAC7D,EAAE,KAAKkG,SAAS,CAAClG,EAAE,GAAGkG,SAAS,GAAGrC,CAAC,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOrC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACE7D,OAAA;IAAKwI,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzI,OAAA,CAACJ,UAAU;MACTsC,WAAW,EAAEA,WAAY;MACzBwG,kBAAkB,EAAEA,CAACC,GAAG,EAAEC,KAAK,KAAK;QAClCzG,cAAc,CAAC6C,IAAI,IAAI;UACrB,MAAM+C,QAAQ,GAAG;YAAE,GAAG/C,IAAI;YAAE,CAAC2D,GAAG,GAAGC;UAAM,CAAC;UAC1C9I,gBAAgB,CAAC6I,GAAG,EAAEC,KAAK,CAAC;UAC5B,OAAOb,QAAQ;QACjB,CAAC,CAAC;MACJ;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFhJ,OAAA;MAAKwI,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BzI,OAAA;QAAKwI,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBzI,OAAA;UAAAyI,QAAA,EAAI;QAAgB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBhJ,OAAA;UAAKwI,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BzI,OAAA;YAAKwI,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCzI,OAAA;cACEiJ,OAAO,EAAEA,CAAA,KAAM/H,uBAAuB,CAAC,CAACD,oBAAoB,CAAE;cAC9DuH,SAAS,EAAC,iBAAiB;cAAAC,QAAA,eAE3BzI,OAAA;gBAAGwI,SAAS,EAAC;cAAmB;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,EACR/H,oBAAoB,iBACnBjB,OAAA;cAAKwI,SAAS,EAAC,mBAAmB;cAAAC,QAAA,eAChCzI,OAAA;gBAAKwI,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC5BzI,OAAA;kBAAAyI,QAAA,EAAM;gBAAY;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACzBhJ,OAAA;kBAAOwI,SAAS,EAAC,QAAQ;kBAAAC,QAAA,gBACvBzI,OAAA;oBACE6E,IAAI,EAAC,UAAU;oBACfqE,OAAO,EAAE/H,UAAW;oBACpBgI,QAAQ,EAAEtB;kBAAkB;oBAAAgB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7B,CAAC,eACFhJ,OAAA;oBAAMwI,SAAS,EAAC,QAAQ;oBAAAC,QAAA,eACtBzI,OAAA;sBAAMwI,SAAS,EAAC,aAAa;sBAAAC,QAAA,EAC1BtH,UAAU,GAAG,MAAM,GAAG;oBAAO;sBAAA0H,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC1B;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNhJ,OAAA;YAAKwI,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnCzI,OAAA;cAAQiJ,OAAO,EAAE5C,cAAe;cAACmC,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,UAC9C,EAAC5H,YAAY,GAAG,GAAG,GAAG,GAAG;YAAA;cAAAgI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,EACRnI,YAAY,iBACXb,OAAA;cAAKwI,SAAS,EAAC,cAAc;cAAAC,QAAA,EAC1BrG,SAAS,CAACqC,GAAG,CAACI,IAAI,iBACjB7E,OAAA;gBAEEwI,SAAS,EAAC,eAAe;gBACzBS,OAAO,EAAEA,CAAA,KAAM3C,oBAAoB,CAACzB,IAAI,CAAE;gBAAA4D,QAAA,EAEzC5D,IAAI,CAACvC;cAAK,GAJNuC,IAAI,CAACxC,EAAE;gBAAAwG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKN,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNhJ,OAAA,CAACV,QAAQ;QACPe,YAAY,EAAEA,YAAa;QAC3BE,SAAS,EAAEA,SAAU;QACrBE,WAAW,EAAEA,WAAY;QACzB2I,UAAU,EAAE5D,cAAe;QAC3B6D,UAAU,EAAErB,cAAe;QAC3B9F,WAAW,EAAEA,WAAY;QACzBwG,kBAAkB,EAAEA,CAACC,GAAG,EAAEC,KAAK,KAAK;UAClCzG,cAAc,CAAC6C,IAAI,IAAI;YACrB,MAAM+C,QAAQ,GAAG;cAAE,GAAG/C,IAAI;cAAE,CAAC2D,GAAG,GAAGC;YAAM,CAAC;YAC1C9I,gBAAgB,CAAC6I,GAAG,EAAEC,KAAK,CAAC;YAC5B,OAAOb,QAAQ;UACjB,CAAC,CAAC;QACJ;MAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACDlH,YAAY,iBACX9B,OAAA;QAAKwI,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BzI,OAAA;UAAGwI,SAAS,EAAC;QAA2B;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC5ClH,YAAY;MAAA;QAAA+G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CACN,EACA3H,mBAAmB,iBAClBrB,OAAA,CAACN,cAAc;QAAC4J,OAAO,EAAE7D,sBAAuB;QAAAgD,QAAA,eAC9CzI,OAAA,CAACT,YAAY;UACX+F,WAAW,EAAEjE,mBAAoB;UACjCd,SAAS,EAAEA,SAAU;UACrBgJ,MAAM,EAAElE,qBAAsB;UAC9BmE,QAAQ,EAAE/D,sBAAuB;UACjCgE,QAAQ,EAAE5D,uBAAwB;UAClC6D,UAAU,EAAE/H,aAAa,CAACgI,GAAG,CAACtI,mBAAmB,CAACgB,EAAE;QAAE;UAAAwG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CACjB,EAEAzH,gBAAgB,iBACfvB,OAAA,CAACN,cAAc;QAAC4J,OAAO,EAAE5D,mBAAoB;QAAA+C,QAAA,eAC3CzI,OAAA,CAACR,aAAa;UACZyH,QAAQ,EAAE1F,gBAAiB;UAC3BgI,MAAM,EAAEvC,kBAAmB;UAC3BwC,QAAQ,EAAE9D,mBAAoB;UAC9B+D,QAAQ,EAAEpC,oBAAqB;UAC/BqC,UAAU,EAAE/H,aAAa,CAACgI,GAAG,CAACpI,gBAAgB,CAACc,EAAE;QAAE;UAAAwG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CACjB,EAEAvH,kBAAkB,iBACjBzB,OAAA,CAACN,cAAc;QAAC4J,OAAO,EAAE3D,qBAAsB;QAAA8C,QAAA,eAC7CzI,OAAA,CAACP,eAAe;UACd+H,IAAI,EAAE/F,kBAAmB;UACzB8H,MAAM,EAAEhC,oBAAqB;UAC7BiC,QAAQ,EAAE7D,qBAAsB;UAChC8D,QAAQ,EAAE9B,sBAAuB;UACjC+B,UAAU,EAAE/H,aAAa,CAACgI,GAAG,CAAClI,kBAAkB,CAACY,EAAE;QAAE;UAAAwG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CACjB,eAEDhJ,OAAA;QAAKwI,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7BzG,MAAM,CAACyC,GAAG,CAACW,KAAK,iBACfpF,OAAA,CAACL,KAAK;UAEJiF,OAAO,EAAEQ,KAAK,CAACR,OAAQ;UACvBC,IAAI,EAAEO,KAAK,CAACP,IAAK;UACjByE,OAAO,EAAEA,CAAA,KAAMpE,WAAW,CAACE,KAAK,CAAC/C,EAAE;QAAE,GAHhC+C,KAAK,CAAC/C,EAAE;UAAAwG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9I,EAAA,CAtmBQD,GAAG;AAAA2J,EAAA,GAAH3J,GAAG;AAwmBZ,eAAeA,GAAG;AAAC,IAAA2J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}